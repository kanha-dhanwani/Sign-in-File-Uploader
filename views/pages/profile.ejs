<!doctype html>
<html>
<head>
    <title>Google Authentication & Uploader</title>
    <style>
        .card {
            border: 1px solid #eee;
            border-radius: 3px;
            background-color: #fff;
            cursor: pointer;
            display: inline-block;
            width: 30%;
            margin: 1.5%;
            padding: 20px;
            box-shadow: 1px 1px 3px #999;
        }
    </style>
    <script>

        function loadData() {
            getBucketObjectList();
        }

        function getBucketObjectList() {
            getData(`/all-files/:username`, (data = []) => {
                data = JSON.parse(data);
                list = data;
                // console.log(list)
                const objectList = data.map((item, index) => {
                    const encodedFileName = encodeURIComponent(item.key).replace(/'/g, '%27');
                    console.log(encodedFileName);
                    return `
            <div class="card" onclick="downloadFile(${index}, '${encodedFileName}')">
                File Name: ${item.filename} </br>
                File Size: ${item.size} </br>
                File Modified: ${item.lastModified} </br>
                Owner: ${item.owner}
            </div>
        `;
                });
                document.getElementById('bucket-data-list').innerHTML = objectList;
            });
        }

        function downloadFile(index, fileName) {
            // console.log("Clicked file name: ", fileName);

            // GET request to the server to fetch URL
            fetch(`/get-object-url/${fileName}`)
                .then((response) => response.text())
                .then((signedUrl) => {
                    // console.log('Received signed URL:', signedUrl);

                    // How it downloads 
                    const a = document.createElement('a'); // Created anchor element to trigger the download
                    a.href = signedUrl; // Set the URL for the download link
                    a.download = fileName; // Set the 'download' attribute with the desired filename
                    document.body.appendChild(a); // Added anchor element to the DOM
                    a.click(); // Click to trigger the download
                    document.body.removeChild(a); // Removed anchor element after file downloaded
                })
                .catch((error) => {
                    console.error('Error getting signed URL:', error);
                });
        }

        function getData(url, cb) {
            const xhr = new XMLHttpRequest();
            xhr.onreadystatechange = state => {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    cb(xhr.responseText);
                }
            }
            xhr.timeout = 10000;
            xhr.open('GET', url);
            xhr.send();
        }

    </script>
</head>
<body onload="loadData()">
    <div class="container">
        <form id="uploadForm" action="/upload-to-s3/:username" method="post" enctype="multipart/form-data">
            <input type="file" name="file">
            <button type="submit">Upload</button>
        </form>
    </div>
    <div id="container">
        <h4>UPDATED FILES</h4>
        <div id="bucket-data-list">
        </div>
    </div>
    </div>
    <center><a href="/logout" class="btn btn-default btn-sm">Logout</a></center>
    </div>
</body>
</html>
